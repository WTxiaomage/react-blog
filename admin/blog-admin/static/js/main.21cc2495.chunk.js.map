{"version":3,"sources":["config/apiUrl.js","pages/Login.js","pages/AddArticle.js","pages/ArticleList.js","pages/AdminIndex.js","pages/Main.js","index.js"],"names":["ipUrl","servicePath","getTypeInfo","addArticle","updateArticle","checkLogin","getArticleList","delArticle","getArticleById","Login","props","useState","userName","setUserName","password","setPassword","isLoading","setIsLoading","className","tip","spinning","title","bordered","style","width","id","size","placeholder","prefix","type","color","onChange","e","target","value","Password","block","onClick","message","error","dataProps","axios","method","url","data","withCredentials","then","res","console","log","localStorage","setItem","openId","history","push","setTimeout","Option","Select","TextArea","Input","AddArticle","articleId","setArticleId","articleTitle","setArticleTitle","articleContent","setArticleContent","markdownContent","setMarkdownContent","introducemd","setIntroducemd","introducehtml","setIntroducehtml","showDate","setShowDate","typeInfo","setTypeInfo","selectedType","setSelectType","marked","setOptions","renderer","Renderer","gfm","pedantic","sanitize","tables","breaks","smartLists","smartypants","changeContent","html","changeIntroduce","useEffect","tmpId","match","params","removeItem","header","article_content","introduce","tmpInt","addTime","typeId","gutter","span","defaultValue","map","item","index","key","typeName","rows","onPressEnter","dangerouslySetInnerHTML","__html","type_id","datetext","replace","Date","getTime","view_count","Math","ceil","random","insertId","isScuccess","success","date","dateString","confirm","Modal","ArticleList","list","setList","getList","dataSource","renderItem","Item","part_count","content","onOk","onCancel","Header","Layout","Content","Footer","Sider","SubMenu","Menu","AdminIndex","collapsed","setCollapsed","minHeight","collapsible","onCollapse","theme","defaultSelectedKeys","mode","background","padding","margin","path","exact","component","textAlign","Main","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.21cc2495.chunk.js","sourcesContent":["/*\n * @Author: wangtao\n * @Date: 2021-11-17 13:58:29\n * @LastEditors: 汪滔\n * @LastEditTime: 2021-12-02 22:13:22\n * @Description: file content\n */\n// let ipUrl = 'http://127.0.0.1:7001/admin/' //开发\nlet ipUrl = 'http://49.235.127.70:7001/admin/' //生产\nlet servicePath = {\n    getTypeInfo:ipUrl + 'getTypeInfo' ,  //  获得文章类别信息\n    addArticle:ipUrl + 'addArticle' ,  //  添加文章\n    updateArticle:ipUrl + 'updateArticle' ,  //  修改文章第api地址\n    checkLogin:ipUrl + 'checkLogin' ,  //  检查用户名密码是否正确\n    getArticleList:ipUrl + 'getArticleList' ,  //  文章列表 \n    delArticle:ipUrl + 'delArticle/' ,  //  删除文章\n    getArticleById:ipUrl + 'getArticleById/' ,  //  根据ID获得文章详情\n}\n\nexport default servicePath;","/*\n * @Author: wangtao\n * @Date: 2021-11-25 14:27:54\n * @LastEditors: 汪滔\n * @LastEditTime: 2021-12-02 21:47:13\n * @Description: file content\n */\nimport React, { useState } from 'react'\nimport 'antd/dist/antd.css'\nimport { Card, Input, Icon, Button, Spin,message } from 'antd'\nimport '../static/css/Login.css'\nimport axios from 'axios'\nimport servicePath from '../config/apiUrl.js'\nfunction Login(props) {\n  const [userName, setUserName] = useState('')\n  const [password, setPassword] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n\n\n  const checkLogin = () => {\n    setIsLoading(true)\n\n    if (!userName) {\n      message.error('用户名不能为空')\n      return false\n    } else if (!password) {\n      message.error('密码不能为空')\n      return false\n    }\n    let dataProps = {\n      userName: userName,\n      password: password,\n    }\n    \n    axios({\n      method: 'post',\n      url: servicePath.checkLogin,\n      data: dataProps,\n      withCredentials: true,\n    }).then((res) => {\n      setIsLoading(false)\n      console.log('🚀🚀🚀wimi======>>>res',res)\n      if (res.data.data === '登录成功') {\n        localStorage.setItem('openId', res.data.openId)\n        props.history.push('/index')\n      } else {\n        message.error('用户名密码错误')\n      }\n    })\n\n    setTimeout(() => {\n      setIsLoading(false)\n    }, 1000)\n  }\n  return (\n    <div className=\"login-div\">\n      <Spin tip=\"Loading...\" spinning={isLoading}>\n        <Card\n          title=\"JSPang Blog  System\"\n          bordered={true}\n          style={{ width: 400 }}\n        >\n          <Input\n            id=\"userName\"\n            size=\"large\"\n            placeholder=\"Enter your userName\"\n            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n            onChange={(e) => {\n              setUserName(e.target.value)\n            }}\n          />\n          <br />\n          <br />\n          <Input.Password\n            id=\"password\"\n            size=\"large\"\n            placeholder=\"Enter your password\"\n            prefix={<Icon type=\"key\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n            onChange={(e) => {\n              setPassword(e.target.value)\n            }}\n          />\n          <br />\n          <br />\n          <Button type=\"primary\" size=\"large\" block onClick={checkLogin} > Login in </Button>\n        </Card>\n      </Spin>\n    </div>\n  )\n}\nexport default Login\n","/*\n * @Author: wangtao\n * @Date: 2021-11-25 15:49:10\n * @LastEditors: 汪滔\n * @LastEditTime: 2021-12-02 22:13:05\n * @Description: file content\n */\nimport React, { useState, useEffect } from 'react'\nimport { marked } from 'marked'\nimport '../static/css/AddArticle.css'\nimport { Row, Col, Input, Select, Button, DatePicker, message } from 'antd'\nimport axios from 'axios'\nimport servicePath from '../config/apiUrl'\nconst { Option } = Select\nconst { TextArea } = Input\n\nfunction AddArticle(props) {\n  const [articleId, setArticleId] = useState(0) // 文章的ID，如果是0说明是新增加，如果不是0，说明是修改\n  const [articleTitle, setArticleTitle] = useState('') //文章标题\n  const [articleContent, setArticleContent] = useState('') //markdown的编辑内容\n  const [markdownContent, setMarkdownContent] = useState('预览内容') //html内容\n  const [introducemd, setIntroducemd] = useState() //简介的markdown内容\n  const [introducehtml, setIntroducehtml] = useState('等待编辑') //简介的html内容\n  const [showDate, setShowDate] = useState() //发布日期\n  const [updateDate, setUpdateDate] = useState() //修改日志的日期\n  const [typeInfo, setTypeInfo] = useState([]) // 文章类别信息\n  const [selectedType, setSelectType] = useState('选择文章类别') //选择的文章类别\n  marked.setOptions({\n    renderer: marked.Renderer(),\n    gfm: true,\n    pedantic: false,\n    sanitize: false,\n    tables: true,\n    breaks: false,\n    smartLists: true,\n    smartypants: false,\n  })\n\n  const changeContent = (e) => {\n    setArticleContent(e.target.value)\n    let html = marked(e.target.value)\n    setMarkdownContent(html)\n  }\n\n  const changeIntroduce = (e) => {\n    setIntroducemd(e.target.value)\n    let html = marked(e.target.value)\n    setIntroducehtml(html)\n  }\n  useEffect(() => {\n    getTypeInfo()\n    //获得文章ID\n    let tmpId = props.match.params.id\n    if (tmpId) {\n      setArticleId(tmpId)\n      getArticleById(tmpId)\n    }\n  }, [])\n\n  //从中台得到文章类别信息\n  const getTypeInfo = () => {\n    axios({\n      method: 'get',\n      url: servicePath.getTypeInfo,\n      // header: { 'Access-Control-Allow-Origin': '*' },\n      // 前端设置了withCredentials为true，就不能设置'Access-Control-Allow-Origin': '*'，否则会导致请求不会携带cookie\n      withCredentials: true,\n    }).then((res) => {\n      if (res.data.data === '没有登录') {\n        localStorage.removeItem('openId')\n        props.history.push('/')\n      } else {\n        setTypeInfo(res.data.data)\n      }\n    })\n  }\n\n  //选择类别后的便哈\n  const selectTypeHandler = (value) => {\n    setSelectType(value)\n  }\n  const saveArticle = () => {\n    if (!selectedType) {\n      message.error('必须选择文章类别')\n      return false\n    } else if (!articleTitle) {\n      message.error('文章名称不能为空')\n      return false\n    } else if (!articleContent) {\n      message.error('文章内容不能为空')\n      return false\n    } else if (!introducemd) {\n      message.error('简介不能为空')\n      return false\n    } else if (!showDate) {\n      message.error('发布日期不能为空')\n      return false\n    }\n\n    let dataProps = {} //传递到接口的参数\n    dataProps.type_id = selectedType\n    dataProps.title = articleTitle\n    dataProps.article_content = articleContent\n    dataProps.introduce = introducemd\n    let datetext = showDate.replace('-', '/') //把字符串转换成时间戳\n    dataProps.addTime = new Date(datetext).getTime() / 1000\n\n    if (articleId == 0) {\n      console.log('articleId=:' + articleId)\n      dataProps.view_count = Math.ceil(Math.random() * 100) + 1000\n      axios({\n        method: 'post',\n        url: servicePath.addArticle,\n        data: dataProps,\n        withCredentials: true,\n      }).then((res) => {\n        setArticleId(res.data.insertId)\n        if (res.data.isScuccess) {\n          message.success('文章保存成功')\n        } else {\n          message.error('文章保存失败')\n        }\n      })\n    } else {\n      dataProps.id = articleId\n      axios({\n        method: 'post',\n        url: servicePath.updateArticle,\n        header: { 'Access-Control-Allow-Origin': '*' },\n        data: dataProps,\n        withCredentials: true,\n      }).then((res) => {\n        if (res.data.isScuccess) {\n          message.success('文章保存成功')\n        } else {\n          message.error('保存失败')\n        }\n      })\n    }\n  }\n\n  const getArticleById = (id) => {\n    axios(servicePath.getArticleById + id, {\n      withCredentials: true,\n      header: { 'Access-Control-Allow-Origin': '*' },\n    }).then((res) => {\n      //let articleInfo= res.data.data[0]\n      setArticleTitle(res.data.data[0].title)\n      setArticleContent(res.data.data[0].article_content)\n      let html = marked(res.data.data[0].article_content)\n      setMarkdownContent(html)\n      setIntroducemd(res.data.data[0].introduce)\n      let tmpInt = marked(res.data.data[0].introduce)\n      setIntroducehtml(tmpInt)\n      setShowDate(res.data.data[0].addTime)\n      setSelectType(res.data.data[0].typeId)\n    })\n  }\n  return (\n    <div>\n      <Row gutter={5}>\n        <Col span={18}>\n          <Row gutter={10}>\n            <Col span={16}>\n              <Input\n                value={articleTitle}\n                placeholder=\"博客标题\"\n                onChange={(e) => {\n                  setArticleTitle(e.target.value)\n                }}\n                size=\"large\"\n              />\n            </Col>\n            <Col span={4}>\n              &nbsp;\n              <Select\n                defaultValue={selectedType}\n                size=\"large\"\n                onChange={selectTypeHandler}\n              >\n                {typeInfo.map((item, index) => {\n                  return (\n                    <Option key={index} value={item.id}>\n                      {item.typeName}\n                    </Option>\n                  )\n                })}\n              </Select>\n            </Col>\n          </Row>\n          <br />\n          <Row gutter={10}>\n            <Col span={12}>\n              <TextArea\n                value={articleContent}\n                className=\"markdown-content\"\n                rows={35}\n                onChange={changeContent}\n                onPressEnter={changeContent}\n                placeholder=\"文章内容\"\n              />\n            </Col>\n            <Col span={12}>\n              <div\n                className=\"show-html\"\n                dangerouslySetInnerHTML={{ __html: markdownContent }}\n              ></div>\n            </Col>\n          </Row>\n        </Col>\n        <Col span={6}>\n          <Row>\n            <Col span={24}>\n              <Button size=\"large\">暂存文章</Button>&nbsp;\n              <Button type=\"primary\" size=\"large\" onClick={saveArticle}>\n                发布文章\n              </Button>\n              <br />\n            </Col>\n            <Col span={24}>\n              <br />\n              <TextArea\n                rows={4}\n                value={introducemd}\n                onChange={changeIntroduce}\n                onPressEnter={changeIntroduce}\n                placeholder=\"文章简介\"\n              />\n              <br />\n              <br />\n              <div\n                className=\"introduce-html\"\n                dangerouslySetInnerHTML={{\n                  __html: '文章简介：' + introducehtml,\n                }}\n              ></div>\n            </Col>\n\n            <Col span={12}>\n              <div className=\"date-select\">\n                <DatePicker\n                  onChange={(date, dateString) => setShowDate(dateString)}\n                  placeholder=\"发布日期\"\n                  size=\"large\"\n                />\n              </div>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </div>\n  )\n}\nexport default AddArticle\n","/*\n * @Author: wangtao\n * @Date: 2021-11-27 15:12:13\n * @LastEditors: 汪滔\n * @LastEditTime: 2021-11-27 16:35:46\n * @Description: file content\n */\nimport React, { useState, useEffect } from 'react'\nimport '../static/css/ArticleList.css'\nimport { List, Row, Col, Modal, message, Button, Switch } from 'antd'\nimport axios from 'axios'\nimport servicePath from '../config/apiUrl'\nconst { confirm } = Modal\n\nfunction ArticleList(props) {\n  const [list, setList] = useState([])\n\n  useEffect(() => {\n    getList()\n  }, [])\n\n  //得到文章列表\n  const getList = () => {\n    axios({\n      method: 'get',\n      url: servicePath.getArticleList,\n      withCredentials: true,\n      header: { 'Access-Control-Allow-Origin': '*' },\n    }).then((res) => {\n      setList(res.data.list)\n    })\n  }\n\n  //删除文章的方法\n  const delArticle = (id) => {\n    confirm({\n      title: '确定要删除这篇博客文章吗?',\n      content: '如果你点击OK按钮，文章将会永远被删除，无法恢复。',\n      onOk() {\n        axios(servicePath.delArticle + id, { withCredentials: true }).then(\n          (res) => {\n            message.success('文章删除成功')\n            getList()\n          }\n        )\n      },\n      onCancel() {\n        message.success('没有任何改变')\n      },\n    })\n  }\n\n  //修改文章\n  const updateArticle = (id, checked) => {\n    props.history.push('/index/add/' + id)\n  }\n  return (\n    <div>\n      <List\n        header={\n          <Row className=\"list-div\">\n            <Col span={8}>\n              <b>标题</b>\n            </Col>\n            <Col span={3}>\n              <b>类别</b>\n            </Col>\n            <Col span={3}>\n              <b>发布时间</b>\n            </Col>\n            <Col span={3}>\n              <b>集数</b>\n            </Col>\n            <Col span={3}>\n              <b>浏览量</b>\n            </Col>\n\n            <Col span={4}>\n              <b>操作</b>\n            </Col>\n          </Row>\n        }\n        bordered\n        dataSource={list}\n        renderItem={(item) => (\n          <List.Item>\n            <Row className=\"list-div\">\n              <Col span={8}>{item.title}</Col>\n              <Col span={3}>{item.typeName}</Col>\n              <Col span={3}>{item.addTime}</Col>\n              <Col span={3}>\n                共<span>{item.part_count}</span>集\n              </Col>\n              <Col span={3}>{item.view_count}</Col>\n\n              <Col span={4}>\n                <Button type=\"primary\">修改</Button>&nbsp;\n                <Button\n                  onClick={() => {\n                    delArticle(item.id)\n                  }}\n                >\n                  删除{' '}\n                </Button>\n              </Col>\n            </Row>\n          </List.Item>\n        )}\n      />\n    </div>\n  )\n}\n\nexport default ArticleList\n","/*\n * @Author: wangtao\n * @Date: 2021-11-25 15:28:00\n * @LastEditors: 汪滔\n * @LastEditTime: 2021-12-01 07:53:36\n * @Description: file content\n */\nimport React, { useState } from 'react'\nimport { Layout, Menu, Breadcrumb, Icon } from 'antd'\nimport '../static/css/AdminIndex.css'\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport AddArticle from './AddArticle'\nimport ArticleList from './ArticleList'\nconst { Header, Content, Footer, Sider } = Layout\nconst { SubMenu } = Menu\n\nfunction AdminIndex(props) {\n  const [collapsed, setCollapsed] = useState(false)\n\n  const onCollapse = (collapsed) => {\n    setCollapsed(collapsed)\n  }\n\n  const handleClickArticle = (e) => {\n    console.log(e.item.props)\n    if (e.key === 'addArticle') {\n      props.history.push('/index/add')\n    } else {\n      props.history.push('/index/list')\n    }\n  }\n\n  return (\n    <Layout style={{ minHeight: '100vh' }}>\n      <Sider collapsible collapsed={collapsed} onCollapse={onCollapse}>\n        <div className=\"logo\" />\n        <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\n          <Menu.Item key=\"1\">\n            <Icon type=\"pie-chart\" />\n            <span>工作台</span>\n          </Menu.Item>\n          <Menu.Item key=\"2\">\n            <Icon type=\"desktop\" />\n            <span>添加文章</span>\n          </Menu.Item>\n          <SubMenu\n            key=\"sub1\"\n            onClick={handleClickArticle}\n            title={\n              <span>\n                <Icon type=\"desktop\" />\n                <span>文章管理</span>\n              </span>\n            }\n          >\n            <Menu.Item key=\"addArticle\">添加文章</Menu.Item>\n            <Menu.Item key=\"articleList\">文章列表</Menu.Item>\n          </SubMenu>\n\n          <Menu.Item key=\"9\">\n            <Icon type=\"file\" />\n            <span>留言管理</span>\n          </Menu.Item>\n        </Menu>\n      </Sider>\n      <Layout>\n        <Header style={{ background: '#fff', padding: 0 }} />\n        <Content style={{ margin: '0 16px' }}>\n          <Breadcrumb style={{ margin: '16px 0' }}>\n            <Breadcrumb.Item>后台管理</Breadcrumb.Item>\n            <Breadcrumb.Item>工作台</Breadcrumb.Item>\n          </Breadcrumb>\n          <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>\n            <div>\n            <Route path=\"/index/\" exact  component={AddArticle} />\n            <Route path=\"/index/add/\" exact   component={AddArticle} />\n            <Route path=\"/index/add/:id\"  exact   component={AddArticle} />\n            <Route path=\"/index/list/\"   component={ArticleList} />\n            </div>\n          </div>\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>JSPang.com</Footer>\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default AdminIndex\n","/*\n * @Author: wangtao\n * @Date: 2021-11-25 14:27:57\n * @LastEditors: 汪滔\n * @LastEditTime: 2021-12-01 07:55:03\n * @Description: file content\n */\nimport React from 'react';\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\nimport Login from './Login'\nimport AdminIndex from './AdminIndex'\nfunction Main(){\n    return (\n        <Router>      \n            {/* <Route path=\"/\" exact component={Login} /> */}\n            <Route path=\"/login/\" exact component={Login} />\n            <Route path=\"/index/\"  component={AdminIndex} />\n        </Router>\n    )\n}\nexport default Main","/*\n * @Author: wangtao\n * @Date: 2021-11-25 14:22:37\n * @LastEditors: 汪滔\n * @LastEditTime: 2021-11-25 14:39:22\n * @Description: file content\n */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './pages/Main'\n\nReactDOM.render(<Main />, document.getElementById('root'));"],"sourceRoot":""}